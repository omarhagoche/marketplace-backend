version: "3.7"
services:
  sabek-app: #(laravel server)
    build:
      args:
        user: root #(you can choose any name you want, it will be the main user inside the container)
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: sabek:latest
    container_name: sabek-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ../:/var/www #(copies project files to the container working folder)
    networks:
      - sabek #(docker network where the 3 services can communicate with each other under 1 network)

  sabek-db: #(mysql server)
    image: mysql:5.7
    container_name: sabek-db
    restart: unless-stopped
    environment:
    #(These details should be the same as with the laravel .env file to establish database connection)
      MYSQL_DATABASE: foods #(database name)
      MYSQL_ROOT_PASSWORD: root #(root user password of the mysql server, database user password is the next entry)
      MYSQL_PASSWORD: .cgi?idx=4&xUpo3 #(database user password)
      MYSQL_USER: u_foods
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - sabek-db:/var/lib/mysql #(volume of the database, so data will not be lost when container is killed. Can normally be accessed at /var/lib/docker/volumes/sabek-db)
      - ./mysql/dump.sql:/docker-entrypoint-initdb.d/dump.sql #(to import the mysql dump file to the newly created database, you can change the dump file to a more recent one if you wish)

    networks:
      - sabek

  nginx: #(web server)
    image: nginx:alpine
    container_name: sabek-nginx
    restart: unless-stopped
    ports:
      - 2222:80 #(2222 is the port on your local machine, while 80 is the internal port of the container)(you can change 2222 to any port to access the system at http://localhost:2222)
    volumes:
      - ../:/var/www
      - ./nginx:/etc/nginx/conf.d/
    networks:
      - sabek

networks:
  sabek:
    driver: bridge
volumes:
  sabek-db:
